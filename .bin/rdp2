#!/bin/bash

#set -eu

shopt -s nullglob extglob;
rdp2_data_home="$XDG_DATA_HOME/rdp2"
rdp2_hosts_home="$rdp2_data_home/hosts"
default_spec="$rdp2_data_home/default.spec"

[[ -d $rdp2_data_home  ]] || mkdir -p "$rdp2_data_home"
[[ -d $rdp2_hosts_home ]] || mkdir -p "$rdp2_hosts_home"

function generate_default_spec() {

> "$default_spec"  cat <<'EOF'
#!/bin/bash

# ~/.local/share/rdp2/default.spec
#   Default Configuration (spec) file for RDP2

domain_name="$(hostname -f)"
domain_name="${domain_name#*.}"

# RDP2 Environment Variables                                            # rdesktop(1) option
# ------------------------------------------------------------------    # ----------------
  colour_depth="${colour_depth:-24}"                                    # -a
  geometry="${geometry:-$(xrandr | awk '/[0-9]\*/{print $1}')}"         # -g
  keyboard_map="${keyboard_map:-en-gb}"                                 # -k
  clipboard_options="${clipboard_options:-clipboard:PRIMARYCLIPBOARD}"  # -r
  sound_opts="${sound_opts:-sound:local}"                               # -r
  domain="${domain:-$domain_name}"                                      # -d
  username="${username:-$USERNAME}"                                     # -p
  password="${password:--}"                                             # -u
  client_hostname="${client_hostname:-$(hostname -f)}"                  # -n
  login_shell="${login_shell:-explorer.exe}"                            # -s
# ------------------------------------------------------------------    # ----------------
EOF
}


function generate_host_spec() {
  set -xv
  local host_spec_file="$rdp2_hosts_home/${1}"

  > "$host_spec_file"  cat <<'EOF'
  domain_name="$(hostname -f)"
  domain_name="${domain_name#*.}"

  username="${username:-$USERNAME}"
  domain="${domain:-$domain_name}"
  password="${password:--}"

EOF
  echo "  hostname='${1##*/}'" >> "$host_spec_file"
  set +xv
}

function display_help() {
  cat <<EOF
$0 [--options] [specfile|hostname]

OPTIONS
  --list    | --ls      # List configured hosts
  --less    | --view    # View configured host
  --initialize          # Generate default spec file
  --link    | --alias   # Create an alias for a configured host
  --verbose | --v       # Turn on execution tracing
  --help    | --h       # Display this message
EOF
}

action=''
for arg; do
  case "$arg" in
    --@(list|ls)) 
      ls -1 "$rdp2_data_home/hosts"
      exit $?
    ;;
    --@(less|view|edit))
      action='less'
    ;;
    --@(verbose|vb|v))
      set -x
    ;;
    --@(initialize|init))
      generate_default_spec
      exit $?
    ;;
    --@(link|ln|alias))
      action='link'
    ;;
    --@(help|h))
      display_help
      exit $?
    ;;
    *)
      set -xv
      target_args+=( "$arg" )
      echo "target_args: ${target_args[@]}"
      set +xv
    ;;
  esac
done


if (( ${#target_args[@]} == 0 )); then
  echo "No target hosts specified." >&2
  exit 2
fi

if [[ $action = 'link' ]]; then
  ln -svf "${target_args[@]}"
  exit $?
fi


if [[ -e "$default_spec" ]]; then
  source "$default_spec"
else
  { echo "No defaults file ($default_spec) found."
    echo "  Use --generate to generate one."
  } >&2
  exit 2
fi


for target in "${target_args[@]}"; do

  candidates=( "$rdp2_data_home/hosts/$target"{,.*} "$target" )
  for candidate_fqdn in "${candidates[@]}"; do
    if [[ -f "$candidate_fqdn" ]]; then
      # host specfile found
      if source "$candidate_fqdn"; then
        colour_depth="${color_depth:-$colour_depth}"
        break
      else
        echo "Error sourcing '$candidate_fqdn'." >&2
        exit 2
      fi
    elif [[ $candidate_fqdn != */* ]]; then
      # host specfile not found, hostname is the arg passed to $0
      hostname="$candidate_fqdn"
      [[ $hostname ]] && break
    fi
  done

  if [[ $action = @(less|edit) ]]; then
    if [[ ! -e $candidate_fqdn ]]; then
      generate_host_spec  "$candidate_fqdn"
    fi
    echo "Examining $candidate_fqdn"
    "${PAGER:-less}" "$candidate_fqdn"
    exit $?;
  else
    rdesktop_args=(  
        -0  -5     
        -D  -K     
        -x  l      
        -r  "${clipboard_options}"   
        -k  "${keyboard_map}"        
        -g  "${geometry}"            
        -a  "${colour_depth:-$color_depth}" 
        -r  "${sound_opts}"         
        -d  "${domain}"             
        -u  "${username}"           
        -p  "-"                     
        -T  "${title:-$hostname}"    
        -s  "${login_shell}"         
            "${hostname}"               
      );
    echo "rdp2 ${rdesktop_args[@]}"
    [[ -z $password || $password = '-' ]] && [[ -t 0 ]] && read -s -p 'Enter password: ' password

    set -xv +ue
    echo "args: ${rdesktop_args[@]}"
    echo "$password" | \
      exec -a rdp2 rdesktop "${rdesktop_args[@]}"
      echo "exit_code: $?"
    set +xv
  fi

done
