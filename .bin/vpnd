#!/bin/bash

set -eu

vpn_name="${1-}"
vpn_name="${vpn_name:-${0##*/}}"
config_dir="$HOME/.config/vpnd"
config_file="$config_dir/$vpn_name"

[[ -z $vpn_name ]] && vpn_name="${0##*/}"

if [[ -e $config_file ]]; then
  source "$config_file"
else
  {
    cat <<EOF
No configuration found for '$vpn_name' (missing '$config_file').

Available configuration
EOF

for i in "$config_dir"/*; do
  echo "  * ${i##*/}"
done

} >&2
  exit 9
fi

thisscript="${0##*/}"
logfile="$TMP/vpnd/$vpn_name/openfortivpn.log"
conffile="$TMP/vpnd/$vpn_name/$vpn_name.conf"

dirname=$(dirname "$logfile")
mkdir -p "$dirname"

function configure-interface {
  local int="$1"
  [[ -n $int ]] || return

  local ip=$( ip address show dev "$int" | grep -Po 'inet \K[\d.]+' )
  [[ -n $ip ]] || return

  echo "Configuring $int with $ip"

  cp -a /etc/resolv.conf "$dirname/resolv.conf"

  { echo "# Generated by $0"
    echo "# Date $(date)"
    echo "# VPN Interface: $int ($ip)"
    echo "# PID: $$ ($PPID)"
    echo "search ${search_domains[@]}"
    for ns in "${nameservers[@]}"; do
      echo "nameserver $ns"
    done
  } | sudo tee /etc/resolv.conf

  for route in "${routes[@]}"; do
    ( set -xv; sudo ip route add "$route" dev "$int" metric "$route_metric"; )
  done
}

function deconfigure-interface {
  cat "$dirname/resolv.conf" | sudo tee /etc/resolv.conf
  for route in "${routes[@]}"; do
    ( set -xv; sudo ip route del "$route"; )
  done
}

function watch-logfile {
  logfile="$1"
  local dirname=$(dirname "$logfile")
  echo "Watching $logfile"

  while read -r date file events; do
    if [[ $events = 'MODIFY' ]]; then
      if int=$(awk '/Interface .* is UP/{ print $3 }' "$logfile"); then
        if [[ -n $int ]]; then
          if awk '{
              if (/Setting .* interface down/) { e=0 } else { e=1 }
              exit $e;
            }' "$logfile"; then
              deconfigure-interface "$int"
            else
              configure-interface "$int"
          fi
        fi
      fi
    fi
  done < <(
      inotifywait -mq -r --timefmt=%FT%T --format '%T %w %e' "$logfile"
    )
}

cat <<EOF | tee "$conffile" | grep -vi '^password'
host=$host
# host=$host
port=$port
username=$username
password=$password
trusted-cert=$trusted_cert
set-routes=$set_routes
use-syslog=$use_syslog
set-dns=$set_dns
pppd-use-peerdns=$pppd_use_peerdns
# realm=${realm-}
EOF

function cleanup {
  if [[ -e "$dirname/resolv.conf" ]]; then
    cat "$dirname/resolv.conf" | sudo tee /etc/resolv.conf
  fi
  rm -fr "$dirname"
}

trap cleanup  EXIT INT QUIT TERM

( sleep 0.32 && echo -n "Enter OTP: " ) &
> "$logfile"
watch-logfile "$logfile" &
sudo openfortivpn --config "$conffile" 2>&1 | tee -a "$logfile"

