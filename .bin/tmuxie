#!/bin/bash

set -eu

if ! type -P tmux &> /dev/null; then
  echo "tmux not installed (in \$PATH)?" >&2
  exit 2
fi

function select_session_by_name() {
  local sessions=()
  local session_name;

  while read -r session; do 
    sessions+=( "$session" )
  done < <( tmux ls 2> /dev/null )

  if (( ${#sessions[@]} == 0 )); then
    return 0
  fi

  perl -le 'for (@ARGV) { @_=split /\s+/; printf "%2s: %-12s %s\n", $c++, $_[0], (join " ", @_[1..$#_]) }' "${sessions[@]}" >&2
  printf 'Which one? ' >&2; 
  read reply

  if [[ -z $reply ]]; then 
    return 0;
  elif [[ $reply = *[!0-9]* ]]; then
    session_name="$reply";
  elif ! (( reply < 0 && reply > ${#sessions[@]}-1 )); then
    session_name="${sessions[reply]//:*/:}"
  else
    echo "No such session. $reply" >&2
    exit 2;
  fi
  
  echo "$session_name"; return 0;
}

if (( $# >= 1 )); then
  session_name="$1"
elif test -t 0; then
  session_name="$(select_session_by_name)"
else
  exit 1
fi


if [[ -n $session_name ]] && tmux ls 2>/dev/null | awk 'BEGIN{ec=1}$1 ~ /'"$session_name"'/{ec=0}END{exit ec}'; then
  exec tmux attach -t "$session_name"
elif [[ -n $session_name ]]; then
  :
elif test -t 0; then
  printf 'Enter session name or RETURN to abort. ' >&2 ; read reply
  if [[ -z $reply ]]; then 
    exit 1;
  else
    session_name="$reply"
  fi
fi

exec tmux new-session -s "$session_name"
