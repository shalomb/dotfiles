#!/bin/bash

set -eu

active_outputs=( $(xrandr -q | grep -Po '^\K(\S+)(?= connected)') )
active_workspaces=$( i3-msg -t get_workspaces )

function get_output {
  local pattern="$1"
  printf '%q\n' "${active_outputs[@]}" | grep -E "$1"
}

laptop_output=$(  get_output eDP-?1  )
if (( ${#active_outputs[@]} > 1 )); then
  external_output_1=$( get_output '^DP-?[0-9]-1|HDMI-?1' )
  external_output_2=$( get_output '^DP-?[0-9]-2|HDMI-?2' )
  external_output_2="${external_output_2:-$external_output_1}"
fi

function dock {
  if (( ${#active_outputs[@]} == 1 )); then
    echo "Only ${#active_outputs[@]} output (${active_outputs[@]}) active."
    echo "ERROR: Device appears to be undocked, cannot continue .." >&2
    return
  fi

  i3-msg "[workspace=\"^(q|w|3|4|5)\"] move workspace to output $external_output_1"

  i3-msg "[workspace=\"^(f|s|e|6|7|8|9)\"] move workspace to output $external_output_2"
  i3-msg "workspace f"
  wmctrl -a firefox  # give focus

  i3-msg "[workspace=\"^(p|m|0|1|2)\"] move workspace to output $laptop_output"
  i3-msg "workspace m"
  wmctrl -a evolution  # give focus

  i3-msg "workspace q"
  wmctrl -a qterm  # give focus
}

function undock {
  i3-msg '[class=".*"] move workspace to output '"$laptop_output"
}

while getopts 'aduhx' opt; do
  case "$opt" in
    a)
      if (( ${#active_outputs[@]} >= 1 )); then
        dock
      fi
    ;;
    d)
      dock
    ;;
    h)
      echo 'pass one of d|u'
    ;;
    u)
      undock
    ;;
    x)
      set -xv
    ;;
  esac
done

# shift $((OPTIND -1))
