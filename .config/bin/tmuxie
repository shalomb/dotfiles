#!/bin/bash

# SYNOPSIS
#   tmuxie - tmux session helper

set -eu

shopt -s nocasematch

if ! type -P tmux &> /dev/null; then
  echo "tmux not installed (in \$PATH)?" >&2
  exit 2
fi

function select_session_by_name() {
  local sessions=()
  local session_name;

  # Current Sessions
  while read -r session; do
    sessions+=( "$session" )
  done < <( tmux -l -2 ls 2> /dev/null )

  # Prepared Sessions
  for d in "$HOME"/.etc /etc "$HOME"/.config; do
    if [[ -d "$d"/tmuxie/sessions/ ]]; then
      sessions+=( "$d"/tmuxie/sessions/* );
    fi
  done

  (( ${#sessions[@]} == 0 )) && return 0

  local c=0
  while read name rest; do
    if [[ -f $name ]]; then
      printf "%s: %-16s %s\n" "$((c++))" "${name##*/}"  "$name" >&2
    else
      printf "%s: %-16s %s\n" "$((c++))" "${name%%:}"   "$rest" >&2
    fi
  done < <( printf "%s\n" "${sessions[@]}")

  read -p 'Which one? ' reply

  if [[ -z $reply ]]; then
    return 0;
  elif [[ $reply = *[!0-9]* ]]; then
    session_name="$reply";
  elif (( reply >= 0 && reply <= ${#sessions[@]}-1 )); then
    session_name="${sessions[reply]//:*/:}"
  else
    echo "No such session. $reply" >&2
    session_name=$(select_session_by_name)
  fi

  echo "$session_name"; return 0;
}

if (( $# >= 1 )); then
  session_name="$1"
elif test -t 0; then
  session_name="$(select_session_by_name)"
else
  exit 1
fi

echo "session_name: $session_name"
echo -ne "\033]0;$session_name+${USER}@${HOSTNAME}:..${PWD: -24}\007"

if  [[ -f $session_name ]]; then
  echo -ne "\033]0; $session_name+${USER}@${HOSTNAME}:/${PWD}"
  exec "$session_name"  # is a file representing a prepared session
elif [[ -n $session_name ]] && tmux -u -l -2 ls 2>/dev/null | awk 'BEGIN{e_c=1}$1 ~ /'"$session_name"'/{e_c=0}END{exit e_c}'; then
  echo -ne "\033]0; $session_name+${USER}@${HOSTNAME}:/${PWD}"
  exec tmux -u -l -2 attach -t "$session_name" # attach to an existing session
elif [[ -n $session_name ]]; then
  if [[ -f ~/.config/tmuxie/sessions/$session_name ]]; then
    echo "launching prepared session ~/.config/tmuxie/sessions/$session_name"
    ~/.config/tmuxie/sessions/$session_name
    exit $?
  else
    read -p "Session '$session_name' doesn't exist!! Create? [N] " reply
    if [[ -z $reply || $reply != 'y' ]]; then
      exit 3
    fi
  fi
elif [[ -z $session_name ]] && test -t 0; then
  # We have no session name and we are interactive
  read -p 'Enter session name or RETURN to abort. ' session_name
  if [[ -z $session_name ]]; then
    exit 3
  fi
fi

exec tmux -u -l -2 new-session -s "$session_name"
