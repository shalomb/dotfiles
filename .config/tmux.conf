# plugins

# Reloading this file
# :source-file ~/.tmux.conf
# tmux source-file ~/.tmux.conf

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | awk '{ print $2 }'"

set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'

set-option  -ga terminal-overrides     ",*256*colo*:Tc"  # True Color
set-option  -g  default-terminal       "tmux-256color"

# tmux show -g
set-option  -g  focus-events           on
set-option  -g  bell-action            any
set-option  -g  default-shell          /bin/bash
set-option  -g  display-panes-time     5000
set-option  -g  display-time           1000
set-option  -g  history-limit          16384
set-option  -g  message-limit          64
set-option  -g  message-style          bg=#FF9900,fg=#000000,bright
set-option  -g  pane-active-border-style fg=#F05E23,bright
set-option  -g  pane-border-style      fg=white
set-option  -g  set-titles             on
set-option  -g  set-titles-string      '#S #I/#P#F(#W) #T|#H' # window number,program name,active (or not)
set-option  -g  status-style           bg=black,fg=white,nobold
set-option  -g  status-interval        60
set-option  -g  status-left-length     30
set-option  -g  status-right-length    48

set-option  -g  visual-activity        on
set-option  -g  visual-bell            on
set-window-option -g aggressive-resize on
set-window-option -g automatic-rename  on
set-window-option -g clock-mode-colour green
set-window-option -g clock-mode-style  24
set-window-option -g monitor-activity  on
set-window-option -g xterm-keys on

set-option -g status-left                  ' #[fg=#ff6633,bold]#S#[default] '
set-option -g status-right                 '#[fg=#339933,bold]#(whoami)@#(hostname -f) #[fg=#ff6633]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=#3399cc]%H:%M#[default] '
set-option -g window-status-separator      ''
# set-option -g window-status-style          'fg=#009966,bg=black'
set-option -g window-status-format         ' #[fg=#009966,nobold]#I#[fg=#404040,nobold]:#[default,nobold]#{=15:window_name}#[default]#[fg=#F05E23,nobold]#F'
set-option -g window-status-current-format ' #[fg=#F05E23,nobold]#I#[fg=#404040,nobold]:#[default,  bold]#{=15:window_name}#[default]#[fg=#F05E23,  bold]#F'
set-option -g window-status-activity-style 'bg=#666666,bold'
set-option -g window-status-last-style     'bg=#97904A,nobold'
set-option -g window-status-bell-style     'bg=#FF6600,bold'

# Vim Mode
set-option        -g status-keys      vi
set-window-option -g mode-keys        vi

# keybindings

set-option -g prefix C-a
bind-key    C-a  send-prefix
bind-key    a    send-prefix

unbind-key    '"'                # Remove default binding
unbind-key    %                  # Remove default binding
unbind-key    C-b

bind-key    C-a last-window
bind-key      a next-window -a   # Goto next-window with bell/activity (M-n)

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}"|grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key    -n C-h  if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key    -n C-j  if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key    -n C-k  if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key    -n C-l  if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key    -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

#unbind [
bind Escape copy-mode

bind-key -T copy-mode-vi  C-v    send-keys -X begin-selection
bind-key -T copy-mode-vi  Escape send-keys -X cancel
bind-key -T copy-mode-vi  v      send-keys -X rectangle-toggle
bind-key -T copy-mode-vi  V      send-keys -X select-line
bind-key -T copy-mode-vi  Y      send-keys -X copy-end-of-line
bind-key -T copy-mode-vi  y      send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
bind-key                  P      run-shell "xclip -selection clipboard -o | tmux load-buffer - ; tmux paste-buffer"

bind-key    '"'  choose-window
#bind-key    /    command-prompt "find-window '%%'"
bind-key    -r - resize-pane -D 1
bind-key    -r < resize-pane -L 1
bind-key    -r > resize-pane -R 1
bind-key    -r + resize-pane -U 1
bind-key    =    select-layout even-horizontal
bind-key    |    select-layout even-vertical
bind-key    _    select-layout main-horizontal

bind-key    C-l  send-keys 'C-l'
bind-key    C-w  select-pane -t :.+

bind-key    b    select-pane -t bottom
bind-key    q    display-panes
bind-key    r    source-file ~/.tmux.conf \; # \ display-message "Sourced ~/.tmux.conf"
bind-key    s    split-window -v -c '#{pane_current_path}'
bind-key    T    break-pane
bind-key    t    select-pane -t top
bind-key    u    capture-pane \; save-buffer ~/.tmp/tmux-buffer \; run-shell "urxvt -e urlview ~/.tmp/tmux-buffer"
bind-key    v    split-window -h -c '#{pane_current_path}'

bind-key    -r h select-pane -L
bind-key    -r J swap-pane -D   # Clockwise, not down
bind-key    -r j select-pane -D
bind-key    -r K swap-pane -U   # Anti-clockwise, not up
bind-key    -r k select-pane -U
bind-key    -r l select-pane -R
bind-key    -r R rotate-window  # Anti-clockwise
bind-key    -r w select-pane -t :.+

set-option  -g  mouse off

# if tmux ls; then
#   read -r -p 'Which session? ';
#   session=$(tmux ls | grep -Eio "^$REPLY[^\ ]+";)
#   if [[ $session ]]; then
#     tmux attach -t "$session"
#   else
#     tmux new-session -s "$session"
#   fi
# else
#   tmux new-session
# fi

#TODO
# http://grota.github.io/blog/2012/05/08/tmux-clipboard-integration/
