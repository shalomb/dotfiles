#!/bin/bash

# SYNOPSIS
#   git(1) aliases

_git_cmd=''
_git_args=()

function _git {
  local cmd="$1"; shift;
  local args=( "$@" )

  if (( ${#args[@]} == 0 )); then
    hist_index=$((HISTCMD-2))
    # Don't go messing around with history -p unless you
    # really know what it is doing.
    args=( $( history -p "!$hist_index:1*" &>/dev/null ) );
    # echo "args: ${args[@]} || ${#args[@]}"
    if [[ -n ${args[0]} ]]; then
      :;
    else
      args=( "${_git_args[@]}" )
    fi
  fi
  _git_args=( "${args[@]}" )

  command git "$cmd" "${args[@]}"
}

function ga  { _git "add"      "$@"; }
function gb  { _git "branch"   "$@"; }
function gco { _git "checkout" "$@"; }
function gd  { _git "diff" -b -w "$@"; }
function gl  { _git "lg"       "$@"; }
function glp { _git "lgp"      "$@"; }
function gp  { command git pull                  "$@"; }
function gP  { command git push                  "$@"; }
function gs  { _git "st" --short "$@"; }

function gcm {
  local args=( "$@" )

  if (( ${#args[@]} == 0 )); then
    git commit
  else
    if [[ ${args[0]} != '-'* ]]; then
      args=( "$@" )
    fi
    git commit -m "${args[*]}"
  fi
}

    alias g=git
complete -o bashdefault -o default -o nospace -F __git_wrap__git_main g

  alias gca='ga; gcm '
 alias gpom='git push origin master'
   alias gk='gitk --all &'
   alias gx='gitx --all'

