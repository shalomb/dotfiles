#!/bin/bash

 ##############################################################################
#   ~/.config/bash/bashrc: executed by bash(1) for non-login shells.           #
#     Also nstalled at ~/.bashrc for legacy reasons.                           #
#                                                                              #
#   See /usr/share/doc/bash/examples/startup-files (in the package bash-doc)   #
#   for examples                                                               #
 ##############################################################################

# If not running interactively, don't do anything, just return
[[ ${-//[!i]/} ]] || return

if [[ -e ~/.config/profile ]]; then
  source ~/.config/profile &>/dev/null
fi

export FCEDIT="$EDITOR"

export IGNOREEOF=5
export TIMEFORMAT=$'\nReal: %3lR\tUser: %3lU\tSys: %3lS\tCPU: %P'

if type -P screen &> /dev/null; then
  read screen_session _ < <(screen -ls | grep "$PPID\.")
  export screen_session
fi

# Shell Options
# echo -n "setting shell options .. "
shopt -s cdable_vars
shopt -s cdspell
shopt -s checkhash
shopt -s checkwinsize
shopt -s cmdhist
shopt -s extglob
#shopt -u expand_aliases
shopt -s histappend histreedit histverify
shopt -u huponexit
shopt -s mailwarn
shopt -s no_empty_cmd_completion  # bash>=2.04 only
shopt -s sourcepath
shopt -s progcomp
shopt -s promptvars

set -o braceexpand
set -o hashall
set -o histexpand
set -o ignoreeof
set -o notify
set -o vi

function source() {
  if [[ ${TRACE_SOURCE-} ]]; then
    before=$(date +%s%N)
  fi

  builtin source "$@"

  if [[ ${TRACE_SOURCE-} ]]; then
    after=$(date +%s%N)
    printf '%10d ns %s %s\n' "$(( after - before ))" "$(date --rfc-3339=ns)" "$@"
  fi
}

# reload - convenience function around source
#   * takes multiple arguments,
function reload () {
  if [[ -n "$@" ]]; then
    for f; do
      if [[ -f "$f" && -r "$f" ]]; then
        if [[ ${f##*/} != @(tags|ctags) ]] && ! file -i "$f" | grep -iq binary; then
          source "$f"
        fi
      fi
    done
  else
    reload  /etc/bash_completion       \
            ~/.config/bash/bashrc
  fi
}

# # Source aliases
reload  ~/.config/bash/completion \
        ~/.config/bash/aliases


if type -P dircolors &>/dev/null; then
  {
    if [[ -f ~/.dircolors && -r ~/.dircolors ]]; then
      eval "$(dircolors -b ~/.dircolors)"
    fi
  } &> /dev/null
fi


# Remove duplicates, non-existent directories from $VAR pass in.
clean_path () {
  local path
  path=${!1}
  path=(${path//:/ })
  eval "$1=\"$( perl -e ' print join ":", grep -d $_, grep !$s{$_}++, @ARGV ' ${path[@]%*/} )\""
}

clean_path PATH;    export PATH
clean_path MANPATH; export MANPATH

for script in ~/.config/bash/rc.d/{,.}*; do
  reload "$script"
done

# Right, we're ready to hand over control to the user now!
# Print some informational trivia.
echo -e "$USER@$HOSTNAME/$TTY $BASH ($$|$PPID) ${BASH_VERSION} $MACHTYPE ${TMUX+"$(tmux -V) ($TMUX_PANE)"}"
uname -a

echo ''
echo -n "last login "
lastlog -u "${USER}" | tail -n 1 | sed -r -e 's/  +/ /g'
uptime
echo ''

type -P fortune &>/dev/null && fortune 2>&1 && echo ""
